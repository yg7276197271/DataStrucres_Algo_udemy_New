package sorting_algorithms;

//Time Complexity is o(N logN)
//Space complexity is o(1)
//Algorithm is :
//1.Pick a  pivot and place it at right position
//2.Smaller on left larger on right
public class QuickSortImpl {

	public static void qs(int arr[],int low , int high){
		
		if(low < high){
			
			int pIndex = partition(arr,low,high); //Get the partition Index
			qs(arr,low,pIndex-1); //Recursive call for first half
			qs(arr,pIndex+1,high);//Recursive call for second half

			
		}
		
	}
	
	private static int partition(int[] arr, int low, int high) {
		
		int i = low;
		int j = high;
		
		while(i<j && low<arr.length && high>=0){
			
		}
		
	}

	public static int [] quickSort(int arr[]){
		
		qs(arr,0,arr.length-1);
		return arr;
		
	}
	
	
	
	public static void main(String[] args) {

		int arr[]={12,60,34,1,99,88,0,999,111};
		quickSort(arr);
		for(int i=0;i<arr.length;i++){
			System.out.println(arr[i]+"");
		}
	}

}
