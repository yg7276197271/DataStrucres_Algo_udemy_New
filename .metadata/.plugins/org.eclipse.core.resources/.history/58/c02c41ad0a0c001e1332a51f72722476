import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ThreeSum {
	public static List<List<Integer>> threeSum(int[] num) {
		List<List<Integer>> ans = new ArrayList<>();
		Arrays.sort(num);

		for (int i = 0; i < num.length - 2; i++) {//We can form triplet till
			// we reach to 3rd last element
													
			if (i==0 || (i>0 && num[i] != num[i + 1])) {//If its the first element in array or
				// To avoid duplicates condition
				
				int low = i + 1, high = num.length - 1, sum = 0 - num[i];
				//Run two pointer approach till low crosses high
				while(low < high){
					
					if (num[low] + num[high] == sum) {

						ans.add(Arrays.asList(num[i], num[low], num[high]));

						while (low < high && num[low] == num[low + 1])
							low++;
						while (low < high && num[high] == num[high + 1])
							high--;

						low++;
						high--;
					} else if (num[low] + num[high] < sum) { // We need to increase
																// the element value
																// to match the sum
						low++;
					} else {
						// We need to decrease the element value to match the sum
						high--;
					}
				}
				
			}

		}
		return ans;

	}

	public static void main(String[] args) {
		threeSum(new int[] { -2, -2, -1, -1, -1, 0, 0, 0, 2, 2, 2 });
	}
}
