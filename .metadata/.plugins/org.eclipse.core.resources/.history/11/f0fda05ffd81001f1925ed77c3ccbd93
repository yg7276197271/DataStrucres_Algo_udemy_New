package sorting_algorithms;
//Time Complexity is o(N logN)
//Space complexity is o(N)
public class MergeSortImpl {

	public static void mS(int arr[], int low, int high) {
		//Base Case 
		if(low>=high) return ;
		
		//Call recursively for left and right array
		int mid = (low+high) / 2;
		//Left Sub-array
		
		mS(arr,low,mid); // This will get called recursively 
		mS(arr,mid+1,high);// This will get called recursively 
	
	}

	public static void merge(int[] arr, int low, int mid, int high) {
		
	}

	static void mergeSort(int arr[], int n) {
		mS(arr, 0, n - 1);
	}
	
	public static void main(String[] args) {
		int arr[]={12,60,34,1,99,88,0,999,111};
		mergeSort(arr,arr.length);
		for(int i=0;i<arr.length;i++){
			System.out.println(arr[i]+"");
		}
	}
}
